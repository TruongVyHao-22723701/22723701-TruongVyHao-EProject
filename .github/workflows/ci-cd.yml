name: CI/CD Pipeline for EProject

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd "rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # =====================
      #  Build and Test Product Service
      # =====================
      - name: Install dependencies for Product Service
        working-directory: ./product
        run: npm install

      - name: Run tests for Product Service
        working-directory: ./product
        run: |
          if [ -f package.json ] && grep -q "\"test\"" package.json; then 
            npm test 
          else 
            echo "No tests defined"; 
          fi

      # =====================
      #  Build Docker Images
      # =====================
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push API Gateway image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest ./api-gateway
          docker push ${{ secrets.DOCKER_USERNAME }}/api-gateway:latest

      - name: Build and push Auth Service image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/auth:latest ./auth
          docker push ${{ secrets.DOCKER_USERNAME }}/auth:latest

      - name: Build and push Product Service image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/product:latest ./product
          docker push ${{ secrets.DOCKER_USERNAME }}/product:latest

      - name: Build and push Order Service image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/order:latest ./order
          docker push ${{ secrets.DOCKER_USERNAME }}/order:latest
